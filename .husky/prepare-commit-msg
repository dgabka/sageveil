#!/bin/bash

# $2 contains the source of the commit message.
# It can be message, template, merge, squash, or commit (for git commit --amend)
if [ "$2" = "commit" ]; then
  echo "Skipping prepare-commit-msg hook due to amend."
  exit 0
fi

# If we're in the middle of an interactive rebase, GIT_SEQUENCE_EDITOR will be set.
# We'll skip the hook in this case as well.
if [ -n "$GIT_SEQUENCE_EDITOR" ]; then
  echo "Skipping prepare-commit-msg hook due to rebase."
  exit 0
fi

COMMIT_MSG_FILE=$1
msg=$(sed '/^\s*#/d' "$COMMIT_MSG_FILE" | sed '/^\s*$/d')

# If commit message file is not empty, do nothing.
# This is required if not commiting `git commit` command
if [ -z "$msg" ]; then
  exec </dev/tty && node_modules/.bin/cz --hook || true
fi

exit 0
